package XmlParsingeg;


import org.apache.xerces.parsers.DOMParser;	
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

	public class EncXml {
		private static Document document;
	    
	    private static int iDecryptionInfoCounter = 0;
	
		public static void main(String argv[]) {

		    try {

			File fXmlFile = new File("/home/harmanjeet/Documents/emp.xml");
			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(fXmlFile);
					
			//optional, but recommended
			//read this - http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
			doc.getDocumentElement().normalize();

			System.out.println("Root element :" + doc.getDocumentElement().getNodeName());
					
			NodeList nList = doc.getElementsByTagName("Employee");
					
			System.out.println("----------------------------");

			for (int temp = 0; temp < nList.getLength(); temp++) {

				Node nNode = nList.item(temp);
						
				System.out.println("\nCurrent Element :" + nNode.getNodeName());
						
				if (nNode.getNodeType() == Node.ELEMENT_NODE) {

					Element eElement = (Element) nNode;

					System.out.println("Employee type: " + eElement.getAttribute("type"));
					System.out.println(" Name : " + eElement.getElementsByTagName("Name").item(0).getTextContent());
					System.out.println("Id : " + eElement.getElementsByTagName("Id").item(0).getTextContent());
					System.out.println("Age : " + eElement.getElementsByTagName("Age").item(0).getTextContent());
					

				}
			}
		    } catch (Exception e) {
			e.printStackTrace();
		    }
		  }
		public static void encrypt() {	    
		    
		    System.out.println("Encrypt...");
	        
	        String xmlFile = "emp.xml"; 

	        DOMParser parser = new DOMParser();

	        try {
	            parser.parse(xmlFile);

	        } catch (SAXException se) {
	            se.printStackTrace();
	        } catch (IOException ioe) {
	            ioe.printStackTrace();
	        }

	        document = parser.getDocument();
	        
	        encryptChildNodes((Node) document);

	        // Print out the encrypted version.
			try {

	    		String string = getElementAsString(document.getDocumentElement(), false);
				
				File fileOut = new File("XmlEncryptionTestEncryptedNodes" + ".xml");
				FileWriter fw = new FileWriter(fileOut);
				PrintWriter pw = new PrintWriter(fw, true);
				
				pw.print(string);
				
				pw.close();
			
			} catch (Exception ex) {
				
				System.out.println("Exception: " + ex);
			}


	    }
	    
}




